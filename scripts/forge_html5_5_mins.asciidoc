Zero to HTML5 app
=================

Prerequisites
-------------

* JBDS 8 (Beta 2) setup
* JBoss EAP 6.x server available in JBDS
* Forge launched in JBDS *Cmd + 4*
* Switch to JBoss perspective
* Open the Forge Console

Create an app
-------------

This section of the script creates a new app from scratch from Forge, imports it into JBDS, and adds the key Java EE 6 technologies. It adds some pre-canned entities, and scaffolds JAX-RS endpoints.

1. In the forge console, create a new Project

    project-new --named rhsessions --topLevelPackage com.redhat.sessions

2. Now, we'll add some capabilities - Servlet, CDI, JPA, Bean Validation, JAX-RS

    servlet-setup; cdi-setup; jpa-setup --provider Hibernate --container JBOSS_EAP6; constraint-setup; rest-setup;

3. Now let's add some entities

    jpa-new-entity --named Attendee
    jpa-new-entity --named Session

4. Now, we want to add some Bean Validation constraints. You should end up with field definitions like these.


   In `Session`:
+
[source,java]
----
   @Size(message = "Must be > 20 and < 1000", min = 20, max = 1000)
   private String description;

   @NotNull
   @Size(message = "Must be > 5 and < 50", min = 5, max = 50)
   private String name;

   @OneToMany
   private Collection<Attendee> speakers = new ArrayList<Attendee>();

----
+
Now generate getters and setters.
+
Take a copy of the name field from Session, and paste into Attendee
+
   In `Attendee`:
+
[source,java]
----
   @NotNull
   @Size(message = "Must be > 5 and < 50", min = 5, max = 50)
   private String name;

----
+
Now generate getters and setters.


Add HTML5 Mobile view with REST resources
-----------------------------------------

1. Generate the RESTful CRUD with an AngularJS frontend and a JAX-RS backend.

    scaffold-generate --provider AngularJS --targets com.redhat.sessions.model.*

2. Open up JAX-RS REST Web Services, and locate `GET /rest/sessions`. Right click on it, and choose *Run As -> Run On Server*. In the Web Service Tester, click the *Play* button, and show the result
